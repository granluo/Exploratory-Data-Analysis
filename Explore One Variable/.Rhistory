pf[pf$year_joined == 2014,]
table(pf$year_joined)
year_joined.bucket <- cut(pf$year_joined,breaks = c(2004,2009,2011,2012,2014))
year_joined.bucket
table(year_joined.bucket)
pf$year_joined.bucket <- cut(pf$year_joined,breaks = c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket)
table(pf$year_joined.bucket,useNA = "ifany")
ggplot(aes(x=age,y = friend_count,data = subset(pf,!is.na(gender))))+
geom_line(aes(color = gender), stat = 'summary' , fun.y = median)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender)))+
geom_line(aes(color = gender), stat = 'summary' , fun.y = median)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender)))+
geom_line(aes(color = gender), stat = 'summary' , fun.y = median)+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender)))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
min(pf[year_joined == 2005,]$age)
(pf[year_joined == 2005,])
(pf[year_joined <2007,])
(pf[year_joined <2007,]$age)
(pf[year_joined <2008,]$age)
(pf[year_joined <2009,]$age)
?min
min(pf[year_joined <2009,]$age,na.rm = T)
min(pf[year_joined <2010,]$age,na.rm = T)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender)))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_line()
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender)))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_line(stat='summary', fun.y = mean)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender)))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_line(stat='summary', fun.y = mean, linetype = 4)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender) | !is.na(year_joined.bucket)))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_line(stat='summary', fun.y = mean, linetype = 4)
ggplot(aes(x=age,y = friend_count),data = subset(pf,!is.na(gender) & !is.na(year_joined.bucket)))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_line(stat='summary', fun.y = mean, linetype = 4)
with(subset(pf,tenure >=1),summary(friend.count/tenure)))
with(subset(pf,tenure >=1),summary(friend.count/tenure))
with(subset(pf,tenure >=1),summary(friend_count/tenure))
ggplot(aes(x = tenure, y = friendships_initiated/tenure), data = subset(pf,tenure >=1))+
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated/tenure), data = subset(pf,tenure >=1))+
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated/tenure), data = subset(pf,tenure >=1))+
geom_smooth(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated/tenure), data = subset(pf,tenure >=1))+
geom_smooth(aes(color = year_joined.bucket))
str(yo)
yo <-  read.csv("yogurt.csv")
str(yo)
yo <-  read.csv("yogurt.csv")
str(yo)
yo$id <- factor(yo$id)
str(yo)
ggplot(aes(x = price),data= yo)+
geom_histogram()
ggplot(aes(x = price),data= yo)+
geom_histogram(binwidth =  10)
summary(yo)
length(unique(yo$price))
table(yo$price)
str(yo)
table(yo$price)
?transform
?transform
head(yo)
yo$all.purchases <- transform(yo,sum(strawberry,blueberry,pina.colada,plain,mixed.berry))
head(yo)
yo <- transform(yo,all.purchases = sum(strawberry,blueberry,pina.colada,plain,mixed.berry))
head(yo)
summary(yo)
length(unique(yo$price))
table(yo$price)
head(yo)
str(yo)
?transform
yo <- transform(yo,all.purchases = (strawberry+blueberry+pina.colada+plain+mixed.berry))
head(yo)
ggplot(aes(x= all.purchases),data = yo, binwidth =1 )+
geom_bar()
names(yo)
ggplot(aes(x = time, y = price),data = yo) +
geom_point()
ggplot(aes(x = time, y = price),data = yo) +
geom_jitter(alpha = .2)
ggplot(aes(x = time, y = price),data = yo) +
geom_jitter(alpha = .2,shape = 21)
ggplot(aes(x = time, y = price),data = yo) +
geom_jitter(alpha = .2,shape = 21,fill = I("#F79420"))
sample.ids <- sample(levels(yo$id ),16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.puchases),pch = 1)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.puchases),pch = 1)
summary(yo)
length(unique(yo$price))
table(yo$price)
head(yo)
str(yo)
yo <- transform(yo,all.purchases = (strawberry+blueberry+pina.colada+plain+mixed.berry))
head(yo)
ggplot(aes(x= all.purchases),data = yo, binwidth =1 )+
geom_bar()
set.seed(222)
sample.ids <- sample(levels(yo$id ),16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.puchases),pch = 1)
set.seed(222)
sample.ids <- sample(levels(yo$id ),16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.puRchases),pch = 1)
set.seed(222)
sample.ids <- sample(levels(yo$id ),16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.purchases),pch = 1)
set.seed(4230)
sample.ids <- sample(levels(yo$id ),16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.purchases),pch = 1)
set.seed(222)
sample.ids <- sample(levels(yo$id ),16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids))+
facet_wrap(~ id )+
geom_line()+
geom_point(aes(size = all.purchases),pch = 1)
if(!require(GGally)){
install.packages('GGally')
}
library(GGally)
head(diamonds)
ggplot(aes(x = price), data = diamonds)+
facet_wrap(~color)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(aes(color = cut))+
facet_wrap(~color)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(aes(fill = cut))+
facet_wrap(~color)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(aes(fill = cut))+
facet_wrap(~color)+
scale_x_log10()
ggplot(aes(x = price), data = diamonds)+
geom_histogram(aes(fill = cut))+
facet_wrap(~color)+
scale_x_log10()+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
geom_point()
ggplot(aes(x = table, y = price),data =diamonds)+
geom_point()+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
geom_point(aes(color = cut))+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
geom_point(aes(fill = cut))+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
geom_point(aes(color = cut))+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
scale_fill_brewer(type = 'qual')+
geom_point(aes(color = cut))
ggplot(aes(x = table, y = price),data =diamonds)+
scale_fill_brewer(type = 'qual')+
xlim(50,80)+
geom_point(aes(color = cut))
ggplot(aes(x = table, y = price),data =diamonds)+
xlim(50,80)+
geom_point(aes(color = cut))+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
xlim(50,80)+
geom_point(aes(fill = cut))+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
xlim(50,80)+
geom_point(color = cut)+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price),data =diamonds)+
xlim(50,80)+
geom_point(aes(color = cut))+
scale_fill_brewer(type = 'qual')
by(diamonds$table,diamonds$cut,summary)
ggplot(aes(x = volume, y = price),data = diamonds)+
geom_point()
ggplot(aes( y = price),data = diamonds)+
geom_point()
diamonds <- transform(diamonds, volume = x*y*z)
ggplot(aes(x = volume, y = price),data = diamonds$)+
diamonds <- transform(diamonds, volume = x*y*z)
ggplot(aes(x = volume, y = price),data = diamonds)+
geom_point()
ggplot(aes(x = volume, y = price),data = diamonds)+
geom_point()+
scale_y_log10()
ggplot(aes(x = volume, y = price),data = diamonds)+
geom_point()+
scale_y_log10()+
xlm(0,350)
ggplot(aes(x = volume, y = price),data = diamonds)+
geom_point()+
scale_y_log10()+
xlim(0,350)
ggplot(aes(x = volume, y = price),data = diamonds)+
geom_point()+
scale_y_log10()+
xlim(0,350)+
scale_color_brewer(type = 'qual')
```{r}
diamonds <- transform(diamonds, volume = x*y*z)
ggplot(aes(x = volume, y = price),data = subset(diamonds,volume > 0))+
geom_point(aes(color = clarity))+
scale_y_log10()+
xlim(0,350)+
scale_color_brewer(type = 'qual')
diamonds <- transform(diamonds, volume = x*y*z)
ggplot(aes(x = volume, y = price),data = subset(diamonds,volume > 0))+
geom_point(aes(color = clarity))+
scale_y_log10()+
xlim(0,350)
ggplot(aes(x = volume, y = price),data = subset(diamonds,volume > 0))+
geom_point(aes(color = clarity))+
scale_y_log10()+
xlim(0,350)+
scale_color_brewer(type = 'qual')
ggplot(aes(x = volume, y = price,color = clarity),data = subset(diamonds,volume > 0))+
geom_point()+
scale_y_log10()+
xlim(0,350)+
scale_color_brewer(type = 'qual')
names(pf)
pf$prop_initiated <- with(pf,ifelse(friend_count == 0, NA, friendships_initiated/friend_count))
ggplot(aes(x=tenure, y = prop_initiated), data = pf)+
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure))+
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure))+
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(aes(color = year_joined.bucket),stat = 'summary', fun.y = median)+
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(aes(color = year_joined.bucket),stat = 'summary', fun.y = median)
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(,stat = 'summary', fun.y = median)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)),)+
geom_line(stat = 'summary', fun.y = median)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)),)+
geom_smooth(stat = 'summary', fun.y = median)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)),)+
geom_smooth(stat = 'summary', fun.y = median)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)),)+
geom_smooth(stat = 'summary', fun.y = median,na.rm=T)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_smooth(stat = 'summary', fun.y = median,na.rm=T, span=0.5)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_smooth(stat = 'summary', fun.y = median,na.rm=T, span=0.9)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(span = 0.9)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'black'),span = 0.9)
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(aes(color = year_joined.bucket),stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'black'),span = 0.9)
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
geom_line(aes(color = year_joined.bucket),stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'b'),span = 0.9)
ggplot(aes(x=tenure, y = prop_initiated), data = subset(pf,!is.na(tenure)))+
# geom_line(aes(color = year_joined.bucket),stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'b'),span = 0.9)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_smooth(stat = 'summary', fun.y = median,na.rm=T, span=0.9)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth()
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'black'))
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(fill = 'black'))
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(fill = 'smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes('smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(binwidth = 10,stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(binwidth = 100,stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket),binwidth = 100, data = subset(pf,!is.na(tenure)))+
geom_line(stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
by(pf$prop_initiated,pf$year_joined.bucket,summary)
ggplot(aes(x=tenure, y = prop_initiated, color = year_joined.bucket), data = subset(pf,!is.na(tenure)))+
geom_line(binwidth = 1000,stat = 'summary', fun.y = median,na.rm=T)+
geom_smooth(aes(color = 'smooth'),color = 'black')
ggplot(aes(x = cut , y = price/carat), data = diamonds)+
geom_points(aes(color = color))
ggplot(aes(x = cut , y = price/carat), data = diamonds)+
geom_point(aes(color = color))
ggplot(aes(x = cut , y = price/carat), data = diamonds)+
geom_point(aes(color = color))+
facet_wrap(~clarity)
ggplot(aes(x = cut , y = price/carat), data = diamonds)+
geom_point(aes(color = color))+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
ggplot(aes(x = cut , y = price/carat), data = diamonds)+
geom_jitter(aes(color = color))+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
ggplot(aes(x = cut , y = price/carat), data = diamonds)+
geom_jitter(aes(color = color),height = 0)+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
data(diamonds)
library(ggplot2)
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.9))
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.90))
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99),fun.x=quantile)
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(carat,0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))
geom_point()
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point()
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point()
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point()+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point()+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(color = 'red',stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point()+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(color = 'red',stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))+
stat_smooth()
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point()+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(color = 'red',stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))+
geom_smooth()
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point()+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(color = 'red',stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))+
geom_smooth(method = 'lm')
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point(alpha = .2)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(color = 'red',stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))+
geom_smooth(method = 'lm')
set.seed(20022012)
library(ggplot2)
# install these if necessary
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages("GGally")
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
install.packages('memisc')
install.packages('lattice')
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages('Matrix')
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages('lattice')
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages('MASS')
install.packages('car')
install.packages('car')
install.packages('reshape')
install.packages('plyr')
ot2)
library(ggplot2)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(gridExtra)
plot1 <- qplot(x= price, data =diamonds) +
ggtitle('Price')
plot2 <- qplot(x= price, data = diamonds) +
ggtitle('Price (log10)')+
scale_y_log10()
grid.arrange(plot1,plot2)
plot1 <- qplot(x= price, data =diamonds, binwidth = 10) +
ggtitle('Price')
library(gridExtra)
plot1 <- qplot(x= price, data =diamonds, binwidth = 10) +
ggtitle('Price')
plot2 <- qplot(x= price, data = diamonds) +
ggtitle('Price (log10)')+
scale_y_log10()
grid.arrange(plot1,plot2)
grid.arrange(plot1,plot2,ncol = 2)
library(gridExtra)
plot1 <- qplot(x= price, data =diamonds, binwidth = 10) +
ggtitle('Price')
plot2 <- qplot(x= price, data = diamonds, binwidth = 0.01) +
ggtitle('Price (log10)')+
scale_y_log10()
grid.arrange(plot1,plot2,ncol = 2)
library(ggplot2)
library(ggplot2)
install.packages('scales')
library(ggplot2)
ggplot(aes(x=carat, y = price),data = diamonds)+
geom_point(alpha = .2)+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))+
geom_point(color = 'red',stat = 'summary',fun.y=quantile,fun.args=list(probs=0.99))+
geom_smooth(method = 'lm')
library(gridExtra)
plot1 <- qplot(x= price, data =diamonds, binwidth = 10) +
ggtitle('Price')
plot2 <- qplot(x= price, data = diamonds, binwidth = 0.01) +
ggtitle('Price (log10)')+
scale_y_log10()
grid.arrange(plot1,plot2,ncol = 2)
